Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:02<00:08,  2.84s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:04<00:04,  2.23s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:06<00:01,  1.95s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:06<00:00,  1.37s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:06<00:00,  1.69s/it]
trainable params: 3,407,872 || all params: 8,033,669,120 || trainable%: 0.04241987003816259
torch.Size([30, 266])
tensor([[128000,    198,   2675,  ...,      0,      0,      0],
        [128000,    198,   2675,  ...,  38836,      0,      0],
        [128000,    198,   2675,  ...,  30535,      0,      0],
        ...,
        [128000,    198,   2675,  ...,    279,  11245,      0],
        [128000,    198,   2675,  ...,    279,  22996,      0],
        [128000,    198,   2675,  ...,    279,  58668,      0]],
       device='cuda:0')
torch.Size([30, 266, 128256])
tensor([[[ 4.7148,  6.0312, 10.6641,  ..., -3.8066, -3.8066, -3.8066],
         [ 9.0547,  6.8555, 14.3594,  ..., -3.8477, -3.8477, -3.8477],
         [ 6.5391,  4.3242,  3.6191,  ..., -6.3008, -6.3008, -6.3008],
         ...,
         [-1.7314, -0.8774,  4.9062,  ..., -2.5234, -2.5234, -2.5234],
         [-2.3086, -0.8374,  4.6680,  ..., -2.8203, -2.8203, -2.8203],
         [-2.5117, -0.9893,  4.7969,  ..., -2.9102, -2.9102, -2.9102]],

        [[ 4.7148,  6.0312, 10.6641,  ..., -3.8066, -3.8066, -3.8066],
         [ 9.0547,  6.8555, 14.3594,  ..., -3.8477, -3.8477, -3.8477],
         [ 6.5391,  4.3242,  3.6191,  ..., -6.3008, -6.3008, -6.3008],
         ...,
         [ 8.9297,  7.8945,  4.8242,  ..., -2.6758, -2.6758, -2.6758],
         [-2.6172, -2.0859,  5.0781,  ..., -2.3477, -2.3477, -2.3477],
         [-2.8379, -2.3906,  4.9648,  ..., -2.4707, -2.4707, -2.4707]],

        [[ 4.7148,  6.0312, 10.6641,  ..., -3.8066, -3.8066, -3.8066],
         [ 9.0547,  6.8555, 14.3594,  ..., -3.8477, -3.8477, -3.8477],
         [ 6.5391,  4.3242,  3.6191,  ..., -6.3008, -6.3008, -6.3008],
         ...,
         [ 7.9336,  7.7539,  4.6875,  ..., -3.1445, -3.1445, -3.1445],
         [-2.7656, -1.8008,  5.3633,  ..., -2.4902, -2.4902, -2.4902],
         [-3.1719, -2.0117,  5.0664,  ..., -2.8594, -2.8594, -2.8594]],

        ...,

        [[ 4.7148,  6.0312, 10.6641,  ..., -3.8066, -3.8066, -3.8066],
         [ 9.0547,  6.8555, 14.3594,  ..., -3.8477, -3.8477, -3.8477],
         [ 6.5391,  4.3242,  3.6191,  ..., -6.3008, -6.3008, -6.3008],
         ...,
         [ 4.3906,  4.9531,  2.7480,  ..., -6.0078, -6.0078, -6.0078],
         [ 5.1836,  6.5859,  4.9727,  ..., -3.6191, -3.6191, -3.6191],
         [-3.2148, -3.3652,  5.5859,  ..., -2.1035, -2.1035, -2.1035]],

        [[ 4.7148,  6.0312, 10.6641,  ..., -3.8066, -3.8066, -3.8066],
         [ 9.0547,  6.8555, 14.3594,  ..., -3.8477, -3.8477, -3.8477],
         [ 6.5391,  4.3242,  3.6191,  ..., -6.3008, -6.3008, -6.3008],
         ...,
         [ 4.3906,  4.9531,  2.7480,  ..., -6.0078, -6.0078, -6.0078],
         [ 5.3555,  7.1953,  4.4102,  ..., -3.2363, -3.2363, -3.2363],
         [-3.3203, -3.2188,  5.2695,  ..., -1.9053, -1.9053, -1.9053]],

        [[ 4.7148,  6.0312, 10.6641,  ..., -3.8066, -3.8066, -3.8066],
         [ 9.0547,  6.8555, 14.3594,  ..., -3.8477, -3.8477, -3.8477],
         [ 6.5391,  4.3242,  3.6191,  ..., -6.3008, -6.3008, -6.3008],
         ...,
         [ 4.3906,  4.9531,  2.7480,  ..., -6.0078, -6.0078, -6.0078],
         [ 6.1172,  8.8906,  4.3164,  ..., -3.0527, -3.0527, -3.0527],
         [-1.4668, -2.1816,  4.6367,  ..., -2.3555, -2.3535, -2.3555]]],
       device='cuda:0')
---------------------------------
torch.Size([30, 166])
tensor([[128000, 128000,   2675,  ...,      0,      0,      0],
        [128000, 128000,   2675,  ...,  38836,      0,      0],
        [128000, 128000,   2675,  ...,  30535,      0,      0],
        ...,
        [128000, 128000,   2675,  ...,    279,  11245,      0],
        [128000, 128000,   2675,  ...,    279,  22996,      0],
        [128000, 128000,   2675,  ...,    279,  58668,      0]],
       device='cuda:0')
torch.Size([30, 166, 128256])
tensor([[[ 4.7188,  6.0664, 10.6484,  ..., -3.8320, -3.8320, -3.8320],
         [ 4.7188,  6.0664, 10.6484,  ..., -3.8320, -3.8320, -3.8320],
         [ 6.5352,  6.1367,  3.4316,  ..., -5.0000, -5.0000, -5.0000],
         ...,
         [-0.4009, -0.4966,  5.6172,  ..., -2.8555, -2.8555, -2.8555],
         [-0.2751, -1.2285,  5.1484,  ..., -3.3125, -3.3125, -3.3125],
         [-0.4741, -1.6475,  5.2734,  ..., -3.2949, -3.2949, -3.2949]],

        [[ 4.7188,  6.0664, 10.6484,  ..., -3.8320, -3.8320, -3.8320],
         [ 4.7188,  6.0664, 10.6484,  ..., -3.8320, -3.8320, -3.8320],
         [ 6.5352,  6.1367,  3.4316,  ..., -5.0000, -5.0000, -5.0000],
         ...,
         [12.1172,  5.7812,  6.1250,  ..., -3.5840, -3.5840, -3.5840],
         [ 2.3984,  0.7725,  5.0742,  ..., -3.3320, -3.3320, -3.3320],
         [ 2.6426,  0.4182,  5.1328,  ..., -3.6582, -3.6562, -3.6562]],

        [[ 4.7188,  6.0664, 10.6484,  ..., -3.8320, -3.8320, -3.8320],
         [ 4.7188,  6.0664, 10.6484,  ..., -3.8320, -3.8320, -3.8320],
         [ 6.5352,  6.1367,  3.4316,  ..., -5.0000, -5.0000, -5.0000],
         ...,
         [11.7734,  5.8516,  5.2773,  ..., -4.2383, -4.2383, -4.2383],
         [ 2.9141,  1.4805,  5.0156,  ..., -3.4824, -3.4805, -3.4805],
         [ 2.9512,  1.0020,  4.9336,  ..., -3.6914, -3.6914, -3.6914]],

        ...,

        [[ 4.7188,  6.0664, 10.6484,  ..., -3.8320, -3.8320, -3.8320],
         [ 4.7188,  6.0664, 10.6484,  ..., -3.8320, -3.8320, -3.8320],
         [ 6.5352,  6.1367,  3.4316,  ..., -5.0000, -5.0000, -5.0000],
         ...,
         [ 7.1172,  2.9258,  2.6094,  ..., -6.7109, -6.7109, -6.7109],
         [ 8.1797,  3.3945,  4.0156,  ..., -4.3906, -4.3906, -4.3906],
         [ 0.6621, -0.6763,  5.3672,  ..., -2.9336, -2.9336, -2.9336]],

        [[ 4.7188,  6.0664, 10.6484,  ..., -3.8320, -3.8320, -3.8320],
         [ 4.7188,  6.0664, 10.6484,  ..., -3.8320, -3.8320, -3.8320],
         [ 6.5352,  6.1367,  3.4316,  ..., -5.0000, -5.0000, -5.0000],
         ...,
         [ 7.1172,  2.9258,  2.6094,  ..., -6.7109, -6.7109, -6.7109],
         [ 9.7344,  4.8086,  4.3359,  ..., -4.1484, -4.1484, -4.1484],
         [ 0.7212, -0.1785,  5.3789,  ..., -2.4609, -2.4609, -2.4609]],

        [[ 4.7188,  6.0664, 10.6484,  ..., -3.8320, -3.8320, -3.8320],
         [ 4.7188,  6.0664, 10.6484,  ..., -3.8320, -3.8320, -3.8320],
         [ 6.5352,  6.1367,  3.4316,  ..., -5.0000, -5.0000, -5.0000],
         ...,
         [ 7.1172,  2.9258,  2.6094,  ..., -6.7109, -6.7109, -6.7109],
         [11.4922,  6.3164,  4.4648,  ..., -3.5801, -3.5801, -3.5801],
         [ 1.9834,  0.1486,  4.5391,  ..., -2.9258, -2.9258, -2.9258]]],
       device='cuda:0', grad_fn=<ToCopyBackward0>)
{'collect_coal': 0, 'collect_diamond': 0, 'collect_drink': 0, 'collect_iron': 0, 'collect_sapling': 0, 'collect_stone': 0, 'collect_wood': 0, 'kill_skeleton': 0, 'kill_zombie': 0, 'kill_cow': 0, 'eat_plant': 0, 'make_iron_pickaxe': 0, 'make_iron_sword': 0, 'make_stone_pickaxe': 0, 'make_stone_sword': 0, 'make_wood_pickaxe': 0, 'make_wood_sword': 0, 'place_furnace': 0, 'place_plant': 0, 'place_stone': 0, 'place_table': 0, 'wake_up': 0}
save model
torch.Size([30, 266])
tensor([[128000,    198,   2675,  ...,      0,      0,      0],
        [128000,    198,   2675,  ...,  38836,      0,      0],
        [128000,    198,   2675,  ...,  30535,      0,      0],
        ...,
        [128000,    198,   2675,  ...,    279,  11245,      0],
        [128000,    198,   2675,  ...,    279,  22996,      0],
        [128000,    198,   2675,  ...,    279,  58668,      0]],
       device='cuda:0')
torch.Size([30, 266, 128256])
tensor([[[ 4.7148,  6.0312, 10.6641,  ..., -3.8066, -3.8066, -3.8066],
         [ 9.0547,  6.8555, 14.3594,  ..., -3.8477, -3.8477, -3.8477],
         [ 6.5391,  4.3242,  3.6191,  ..., -6.3008, -6.3008, -6.3008],
         ...,
         [-1.7314, -0.8774,  4.9062,  ..., -2.5234, -2.5234, -2.5234],
         [-2.3086, -0.8374,  4.6680,  ..., -2.8203, -2.8203, -2.8203],
         [-2.5117, -0.9893,  4.7969,  ..., -2.9102, -2.9102, -2.9102]],

        [[ 4.7148,  6.0312, 10.6641,  ..., -3.8066, -3.8066, -3.8066],
         [ 9.0547,  6.8555, 14.3594,  ..., -3.8477, -3.8477, -3.8477],
         [ 6.5391,  4.3242,  3.6191,  ..., -6.3008, -6.3008, -6.3008],
         ...,
         [ 8.9297,  7.8945,  4.8242,  ..., -2.6758, -2.6758, -2.6758],
         [-2.6172, -2.0859,  5.0781,  ..., -2.3477, -2.3477, -2.3477],
         [-2.8379, -2.3906,  4.9648,  ..., -2.4707, -2.4707, -2.4707]],

        [[ 4.7148,  6.0312, 10.6641,  ..., -3.8066, -3.8066, -3.8066],
         [ 9.0547,  6.8555, 14.3594,  ..., -3.8477, -3.8477, -3.8477],
         [ 6.5391,  4.3242,  3.6191,  ..., -6.3008, -6.3008, -6.3008],
         ...,
         [ 7.9336,  7.7539,  4.6875,  ..., -3.1445, -3.1445, -3.1445],
         [-2.7656, -1.8008,  5.3633,  ..., -2.4902, -2.4902, -2.4902],
         [-3.1719, -2.0117,  5.0664,  ..., -2.8594, -2.8594, -2.8594]],

        ...,

        [[ 4.7148,  6.0312, 10.6641,  ..., -3.8066, -3.8066, -3.8066],
         [ 9.0547,  6.8555, 14.3594,  ..., -3.8477, -3.8477, -3.8477],
         [ 6.5391,  4.3242,  3.6191,  ..., -6.3008, -6.3008, -6.3008],
         ...,
         [ 4.3906,  4.9531,  2.7480,  ..., -6.0078, -6.0078, -6.0078],
         [ 5.1836,  6.5859,  4.9727,  ..., -3.6191, -3.6191, -3.6191],
         [-3.2148, -3.3652,  5.5859,  ..., -2.1035, -2.1035, -2.1035]],

        [[ 4.7148,  6.0312, 10.6641,  ..., -3.8066, -3.8066, -3.8066],
         [ 9.0547,  6.8555, 14.3594,  ..., -3.8477, -3.8477, -3.8477],
         [ 6.5391,  4.3242,  3.6191,  ..., -6.3008, -6.3008, -6.3008],
         ...,
         [ 4.3906,  4.9531,  2.7480,  ..., -6.0078, -6.0078, -6.0078],
         [ 5.3555,  7.1953,  4.4102,  ..., -3.2363, -3.2363, -3.2363],
         [-3.3203, -3.2188,  5.2695,  ..., -1.9053, -1.9053, -1.9053]],

        [[ 4.7148,  6.0312, 10.6641,  ..., -3.8066, -3.8066, -3.8066],
         [ 9.0547,  6.8555, 14.3594,  ..., -3.8477, -3.8477, -3.8477],
         [ 6.5391,  4.3242,  3.6191,  ..., -6.3008, -6.3008, -6.3008],
         ...,
         [ 4.3906,  4.9531,  2.7480,  ..., -6.0078, -6.0078, -6.0078],
         [ 6.1172,  8.8906,  4.3164,  ..., -3.0527, -3.0527, -3.0527],
         [-1.4668, -2.1816,  4.6367,  ..., -2.3555, -2.3535, -2.3555]]],
       device='cuda:0')
---------------------------------
torch.Size([30, 166])
tensor([[128000, 128000,   2675,  ...,      0,      0,      0],
        [128000, 128000,   2675,  ...,  38836,      0,      0],
        [128000, 128000,   2675,  ...,  30535,      0,      0],
        ...,
        [128000, 128000,   2675,  ...,    279,  11245,      0],
        [128000, 128000,   2675,  ...,    279,  22996,      0],
        [128000, 128000,   2675,  ...,    279,  58668,      0]],
       device='cuda:0')
torch.Size([30, 166, 128256])
tensor([[[ 4.7188,  6.0664, 10.6484,  ..., -3.8320, -3.8320, -3.8320],
         [ 4.7188,  6.0664, 10.6484,  ..., -3.8320, -3.8320, -3.8320],
         [ 6.5352,  6.1367,  3.4316,  ..., -5.0000, -5.0000, -5.0000],
         ...,
         [-0.4009, -0.4966,  5.6172,  ..., -2.8555, -2.8555, -2.8555],
         [-0.2751, -1.2285,  5.1484,  ..., -3.3125, -3.3125, -3.3125],
         [-0.4741, -1.6475,  5.2734,  ..., -3.2949, -3.2949, -3.2949]],

        [[ 4.7188,  6.0664, 10.6484,  ..., -3.8320, -3.8320, -3.8320],
         [ 4.7188,  6.0664, 10.6484,  ..., -3.8320, -3.8320, -3.8320],
         [ 6.5352,  6.1367,  3.4316,  ..., -5.0000, -5.0000, -5.0000],
         ...,
         [12.1172,  5.7812,  6.1250,  ..., -3.5840, -3.5840, -3.5840],
         [ 2.3984,  0.7725,  5.0742,  ..., -3.3320, -3.3320, -3.3320],
         [ 2.6426,  0.4182,  5.1328,  ..., -3.6582, -3.6562, -3.6562]],

        [[ 4.7188,  6.0664, 10.6484,  ..., -3.8320, -3.8320, -3.8320],
         [ 4.7188,  6.0664, 10.6484,  ..., -3.8320, -3.8320, -3.8320],
         [ 6.5352,  6.1367,  3.4316,  ..., -5.0000, -5.0000, -5.0000],
         ...,
         [11.7734,  5.8516,  5.2773,  ..., -4.2383, -4.2383, -4.2383],
         [ 2.9141,  1.4805,  5.0156,  ..., -3.4824, -3.4805, -3.4805],
         [ 2.9512,  1.0020,  4.9336,  ..., -3.6914, -3.6914, -3.6914]],

        ...,

        [[ 4.7188,  6.0664, 10.6484,  ..., -3.8320, -3.8320, -3.8320],
         [ 4.7188,  6.0664, 10.6484,  ..., -3.8320, -3.8320, -3.8320],
         [ 6.5352,  6.1367,  3.4316,  ..., -5.0000, -5.0000, -5.0000],
         ...,
         [ 7.1172,  2.9258,  2.6094,  ..., -6.7109, -6.7109, -6.7109],
         [ 8.1797,  3.3945,  4.0156,  ..., -4.3906, -4.3906, -4.3906],
         [ 0.6621, -0.6763,  5.3672,  ..., -2.9336, -2.9336, -2.9336]],

        [[ 4.7188,  6.0664, 10.6484,  ..., -3.8320, -3.8320, -3.8320],
         [ 4.7188,  6.0664, 10.6484,  ..., -3.8320, -3.8320, -3.8320],
         [ 6.5352,  6.1367,  3.4316,  ..., -5.0000, -5.0000, -5.0000],
         ...,
         [ 7.1172,  2.9258,  2.6094,  ..., -6.7109, -6.7109, -6.7109],
         [ 9.7344,  4.8086,  4.3359,  ..., -4.1484, -4.1484, -4.1484],
         [ 0.7212, -0.1785,  5.3789,  ..., -2.4609, -2.4609, -2.4609]],

        [[ 4.7188,  6.0664, 10.6484,  ..., -3.8320, -3.8320, -3.8320],
         [ 4.7188,  6.0664, 10.6484,  ..., -3.8320, -3.8320, -3.8320],
         [ 6.5352,  6.1367,  3.4316,  ..., -5.0000, -5.0000, -5.0000],
         ...,
         [ 7.1172,  2.9258,  2.6094,  ..., -6.7109, -6.7109, -6.7109],
         [11.4922,  6.3164,  4.4648,  ..., -3.5801, -3.5801, -3.5801],
         [ 1.9834,  0.1486,  4.5391,  ..., -2.9258, -2.9258, -2.9258]]],
       device='cuda:0', grad_fn=<ToCopyBackward0>)
Traceback (most recent call last):
  File "/scratch/nlp/lijiaqi/CLearning/reflexion/notebooks/Ours.py", line 65, in <module>
    global_step, rewards, achievement= policy.trainer(task, global_step, frac, writer=None)
  File "../ppo_llm_pomdp.py", line 429, in trainer
    loss.backward()
  File "/scratch/lijiaqi/.conda/envs/craft/lib/python3.9/site-packages/torch/_tensor.py", line 492, in backward
    torch.autograd.backward(
  File "/scratch/lijiaqi/.conda/envs/craft/lib/python3.9/site-packages/torch/autograd/__init__.py", line 251, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 2.37 GiB. GPU 0 has a total capacty of 79.33 GiB of which 2.03 GiB is free. Including non-PyTorch memory, this process has 77.29 GiB memory in use. Of the allocated memory 69.26 GiB is allocated by PyTorch, and 6.74 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
